@model Regule.Models.Funcionario

@{
    ViewBag.Title = "Editar";
}

<h2>Editar</h2>
<table class="hidden sample">
    @Html.EditorFor(model=>model.Fisica.Pessoa.CliComunicars[0], new { htmlAttributes = new { @class = "form-control" } })
</table>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Funcionário</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Fisica.Pessoa.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.Fisica.Pessoa.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fisica.Pessoa.Nome,new { htmlAttributes = new { @class = "form-control", @data_val_number="O campo deve ser um Número"} })
                @Html.ValidationMessageFor(model => model.Fisica.Pessoa.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fisica.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fisica.CPF, new { htmlAttributes = new { @class = "form-control", @data_val_number="O campo deve ser um Número"} })
                @Html.ValidationMessageFor(model => model.Fisica.CPF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CarteiraTrb, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarteiraTrb, new { htmlAttributes = new { @class = "form-control", @data_val_number="O campo deve ser um Número"} })
                @Html.ValidationMessageFor(model => model.CarteiraTrb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RG, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RG, new { htmlAttributes = new { @class = "form-control", @data_val_number="O campo deve ser um Número"} })
                @Html.ValidationMessageFor(model => model.RG, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Salario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salario, new { htmlAttributes = new { @class = "form-control", @data_val_number="O campo deve ser um Número"} })
                @Html.ValidationMessageFor(model => model.Salario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control", @data_val_date="O campo deve ser um Número"} })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-offset-2">
                @Html.CheckBoxFor(model => model.Tecnico, new { htmlAttributes = new { @class = "form-control col-md-2" } })
                Marque se for um Técnico
            </label>
            @Html.ValidationMessageFor(model => model.Tecnico, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label class="control-label col-md-offset-2">
                @Html.CheckBoxFor(model => model.Dirige, new { htmlAttributes = new { @class = "form-control col-md-2" } })
                Marque se tiver carteira de motorista
            </label>
            @Html.ValidationMessageFor(model => model.Dirige, "", new { @class = "text-danger" })
        </div>
        <div class="panel panel-default">
            <table class="table table-hover">
                <tr>
                    <th>
                        Número
                    </th>
                    <th>
                        Principal
                    </th>
                    <th>
                        <div class="btn btn-default adicionar">
                            <i class="glyphicon glyphicon-plus-sign"></i>
                        </div>
                    </th>
                </tr>
                @Html.EditorFor(model=>model.Fisica.Pessoa.CliComunicars, new { htmlAttributes = new { @class = "form-control" } })
            </table>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar a listagem", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}




